import numpy as np

board =  [[5,3,0,0,7,0,0,0,0],
        [6,0,0,1,9,5,0,0,0],
        [0,9,8,0,0,0,0,6,0],
        [8,0,0,0,6,0,0,0,3],
        [4,0,0,8,0,3,0,0,1],
        [0,0,0,0,2,0,0,0,6],
        [0,6,0,0,0,0,2,8,0],
        [0,0,0,0,1,0,0,0,5],
        [0,0,0,0,0,0,0,0,0]]

def print_board(bo):
    for i in range (len(bo)):
        if i % 3 == 0 and i != 0:
            print("------------------------")

        for j in range(len(bo[0])):
            if j % 3 == 0 and j != 0:
                print(" | ", end= "")

            if j == 8:
                print(bo[i][j])
            else:
                print(str(bo[i][j]) + " ", end = "")

def possible(row, column, number):
        global grid
        for i in range(0,9):
                if board[row][i] == number:
                        return False
        for i in range(0,9):
                if board[i][column] == number:
                        return False

        x = (column // 3) * 3
        y = (row // 3) * 3
        for i in range (0,3):
                for j in range(0,3):
                        if board[y+i][x+i]== number:
                                return False
        return True


def solve():
        global board

        for row in range(0,9):
                for column in range(0,9):
                        if board[row][column] == 0:
                                for number in range(0,10):
                                        if possible(row, column, number):
                                                board[row][column] = number
                                                solve()
                                                board[row][column] = 0
                                return

        print_board(board)

        input("")

print_board(board)
print("__________________________________________________________________")
solve()

print_board(board)
